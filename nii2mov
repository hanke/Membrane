#!/usr/bin/python

import numpy as np
import matplotlib
matplotlib.use("Agg")
import matplotlib.pyplot as plt
import matplotlib.animation as manimation
import nibabel as nb
from matplotlib import cm
import sys

# args
in_fname = sys.argv[1]
out_fname = sys.argv[2]
axis = int(sys.argv[3])

# load image data
img = nb.load(in_fname)
data = img.get_data().astype(float)

# normalize (a bit more robust than just max)
data /= np.sort(data, axis=None)[.95 * np.prod(data.shape)]
# move axis to iterate over to the front
data = np.rollaxis(data, axis)
# determine shape of the movie frames
shape = np.array(data.shape[1:3], float)
# swap X and Y axes to make imshow do the right thing
data = np.transpose(data, (0, 2, 1))

data = cm.gray(data)

# setup movie writer
FFMpegWriter = manimation.writers['ffmpeg']
metadata = dict(title='Movie Test', artist='Matplotlib',
        comment='Movie support!')
writer = FFMpegWriter(fps=25, bitrate=1000, metadata=metadata,
                      codec='libvpx')

# pre-configure the display
fig = plt.figure(figsize=shape/50)
p = plt.figimage(data[20], origin='lower')

# iterate over slices/frames
with writer.saving(fig, out_fname, 50):
    for i in xrange(len(data)/2, len(data)):
        p.set_data(data[i])
        writer.grab_frame()
    for i in xrange(len(data)/2):
        p.set_data(data[i])
        writer.grab_frame()

